{"version":3,"file":"js/779.1463046d.js","mappings":"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","sources":["webpack://popover-search-ionic/./node_modules/@ionic/core/components/index3.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\n\nconst addEventListener = (el, // TODO(FW-2832): type\neventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el)\n    ? {\n      capture: !!opts.capture,\n      passive: !!opts.passive,\n    }\n    : !!opts.capture;\n  let add;\n  let remove;\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  }\n  else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\nconst supportsPassive = (node) => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        },\n      });\n      node.addEventListener('optsTest', () => {\n        return;\n      }, opts);\n    }\n    catch (e) {\n      _sPassive = false;\n    }\n  }\n  return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n// TODO(FW-2832): types\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n  const handleTouchStart = (ev) => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n    /**\n     * Events are dispatched on the element that is tapped and bubble up to\n     * the reference element in the gesture. In the event that the element this\n     * event was first dispatched on is removed from the DOM, the event will no\n     * longer bubble up to our reference element. This leaves the gesture in an\n     * unusable state. To account for this, the touchend and touchcancel listeners\n     * should be added to the event target so that they still fire even if the target\n     * is removed from the DOM.\n     */\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n    }\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n  const handleMouseDown = (ev) => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n  const handleTouchEnd = (ev) => {\n    stopTouch();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const handleMouseUp = (ev) => {\n    stopMouse();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n    rmMouseMove = rmMouseUp = undefined;\n  };\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    }\n    else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n  return {\n    enable,\n    stop,\n    destroy,\n  };\n};\nconst getDocument = (node) => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n      const deltaX = x - startX;\n      const deltaY = y - startY;\n      const distance = deltaX * deltaX + deltaY * deltaY;\n      if (distance < threshold) {\n        return false;\n      }\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n      if (cosine > maxCosine) {\n        isPan = 1;\n      }\n      else if (cosine < -maxCosine) {\n        isPan = -1;\n      }\n      else {\n        isPan = 0;\n      }\n      dirty = false;\n      return true;\n    },\n    isGesture() {\n      return isPan !== 0;\n    },\n    getDirection() {\n      return isPan;\n    },\n  };\n};\n\n// TODO(FW-2832): types\nconst createGesture = (config) => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined,\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll,\n  });\n  const pointerDown = (ev) => {\n    const timeStamp = now(ev);\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev;\n    // Check if gesture can start\n    if (canStart && canStart(detail) === false) {\n      return false;\n    }\n    // Release fallback\n    gesture.release();\n    // Start gesture\n    if (!gesture.start()) {\n      return false;\n    }\n    hasStartedPan = true;\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n  const pointerMove = (ev) => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n      return;\n    }\n    // gesture is currently being detected\n    calcGestureData(detail, ev);\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n    isMoveQueued = false;\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n  const tryToCapturePan = () => {\n    if (!gesture.capture()) {\n      return false;\n    }\n    hasCapturedPan = true;\n    hasFiredStart = false;\n    // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    }\n    else {\n      fireOnStart();\n    }\n    return true;\n  };\n  const blurActiveElement = () => {\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n    if (onStart) {\n      onStart(detail);\n    }\n    hasFiredStart = true;\n  };\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  };\n  // END *************************\n  const pointerUp = (ev) => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n    if (!tmpHasFiredStart) {\n      return;\n    }\n    calcGestureData(detail, ev);\n    // Try to capture press\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n      return;\n    }\n    // Not captured any event\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive,\n  });\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n        reset();\n      }\n      pointerEvents.enable(enable);\n    },\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    },\n  };\n};\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = (detail.currentTime = now(ev));\n  const timeDelta = timestamp - prevT;\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    }\n    else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n  detail.currentX = x;\n  detail.currentY = y;\n};\nconst now = (ev) => {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n"],"names":["addEventListener","el","eventName","callback","opts","listenerOpts","supportsPassive","capture","passive","add","remove","node","undefined","_sPassive","Object","defineProperty","get","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","target","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","destroy","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","Math","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","start","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","createGesture","config","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","disableScroll","gesturePriority","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","detail","type","startTime","currentX","currentY","velocityX","velocityY","currentTime","event","data","pan","gesture","G","name","gestureName","priority","timeStamp","updateDetail","release","tryToCapturePan","calcGestureData","requestAnimationFrame","fireOnMove","abortGesture","then","fireOnStart","blurActiveElement","document","activeElement","blur","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY"],"sourceRoot":""}